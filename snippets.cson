#SVG

'.text.html':
  'Rectangle':
    'prefix': 'rec'
    'body': '<rect x="${1:#}" y="${1:#}" width="${3:#}" height="${4:#}"/>'
  'Circle':
    'prefix': 'cir'
    'body': '<circle r="${1:#}" cx="${2:#}" cy="${3:#}" />'
  'Group':
    'prefix': 'g'
    'body': '<g></g>'
  'Definition':
    'prefix': 'defs'
    'body': '<defs>\n \n</defs>'
  'Text':
    'prefix': 'txt'
    'body': '<text x="${1:#}" y="${2:#}">${3:#}</text>'

# JavaScript

'.source.js':
  'For Loop':
    'prefix': 'for'
    'body': """
      for (let i = 0; i < ${1:array}.length; i++) {
        ${2:}
      }
    """
  'For-in Loop':
    'prefix': 'forin'
    'body': """
      for (let ${1:variable} in ${2:object}) {
        if (${2:object}.hasOwnProperty(${1:variable})) {

        }
      }
    """
  'For Each':
    'prefix': 'fore'
    'body': """
      forEach( (${1:el}) => {
        ${2:}
      });
    """
  'Map':
    'prefix': 'map'
    'body': """
      map( (${1:el}) => {
        ${2:}
      });
    """
  'Every':
    'prefix': 'evr'
    'body': """
      every( (${1:el}) => {
        ${2:}
      });
    """
  'Filter':
    'prefix': 'fil'
    'body': """
      filter( (${1:el}) => {
        ${2:}
      });
    """
  'Reduce':
    'prefix': 'red'
    'body': """
      reduce( (${1:acc}, ${2:val}) => {

      });
    """
  'Some':
    'prefix': 'some'
    'body': """
      some( (${1:el}) => {

      });
    """
  'Import':
    'prefix': 'imp'
    'body': "import ${1:package} from '${2:path}';"
  'Import Many':
    'prefix': 'imps'
    'body': "import {${1:packages}} from '${2:path}';"
  'Import As':
    'prefix': 'impas'
    'body': "import * as ${1:alias} from '${2:path}';"
  'Single Line Arrow Function':
    'prefix': 'saf'
    'body': '(${1:el}) => ${2:#};'
  'Require (>=ES5)':
    'prefix': 'req'
    'body': 'const ${1:package} = require("${2:path}");'
  'React container template':
    'prefix': 'container'
    'body': """
      import { connect } from "react-redux";
      import Component from "component_path"

      const mapStateToProps = (state) => ({

      })

      const mapDispatchToProps = (dispatch) => ({

      })

      export default connect(mapStateToProps, mapDispatchToProps)(Component);
    """
  'Function':
    'prefix': 'fun'
    'body': """
      const ${1:functionName} = function ${1:functionName}() {

      };
    """

'.source.jsx':
  'entryFile template':
    'prefix': 'entry'
    'body': """
      import React from 'react';
      import ReactDOM from 'react-dom';
      import Root from './components/root';
      import configureStore from './store/store';

      document.addEventListener("DOMContentLoaded", () => {
        const store = configureStore();
        const root = document.getElementById("root");
        ReactDOM.render(<Root store={store}/>, root);
      });
    """
  'rootFile template':
    'prefix': 'root'
    'body': """
      import React from 'react';
      import { Provider } from 'react-redux';
      import { HashRouter } from 'react-router-dom';

      import App from './app';

      const Root = ({ store }) => (
        <Provider store={store}>
          <HashRouter>
            <App store={store}/>
          </HashRouter>
        </Provider>
      );

      export default Root;
    """
  'react class component template':
    'prefix': 'class_component'
    'body': """
      import React from 'react'

      class ClassName extends React.Component {
        constructor(props) {
          super(props);
        }

        render() {
          return (
          <div>

          </div>
          )
        }
      }

      export default ClassName;
    """
# Markdown

'.source.gfm':
  'h1':
    'prefix': 'h1'
    'body': '# ${1:header}'
  'h2':
    'prefix': 'h2'
    'body': '## ${1:header}'
  'h3':
    'prefix': 'h3'
    'body': '### ${1:header}'
  'h4':
    'prefix': 'h4'
    'body': '#### ${1:header}'
  'h5':
    'prefix': 'h5'
    'body': '##### ${1:header}'
  'h6':
    'prefix': 'h6'
    'body': '###### ${1:header}'
  'CSS Highlighting':
    'prefix': 'css'
    'body': """
      ```css
      ${1:css}
      ```
    """
  'HTML Highlighting':
    'prefix': 'html'
    'body': """
      ```html
      ${1:html}
      ```
    """
  'JavaScript Highlighting':
    'prefix': 'javascript'
    'body': """
      ```javascript
      ${1:javascript}
      ```
    """
  'Ruby Highlighting':
    'prefix': 'ruby'
    'body': """
      ```ruby
      ${1:ruby}
      ```
    """
  'Python Highlighting':
    'prefix': 'python'
    'body': """
      ```python
      ${1:python}
      ```
    """
  'Checkbox':
    'prefix': 'chk'
    'body': '- [ ] ${1:item}'
